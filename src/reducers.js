// reducers.js
/**
 Редукторы (reducers) в Redux — это чистые функции, которые принимают текущее состояние (state) 
 и действие (action), а затем возвращают новое состояние. 
 Они используются для обновления состояния приложения в ответ на действия, 
 которые отправляются в хранилище (store).
 */

import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from './actions'; //Эта строка импортирует константы, которые представляют типы действий, из файла actions.js. Эти константы используются для идентификации действий в редукторе.

const initialState = {
  // Начальное состояние вашего приложения
  loading: false, // Булево значение, которое указывает, выполняется ли в данный момент процесс регистрации.
  user: null, // Объект, который содержит данные пользователя. Начальное значение — null.
  error:null //Строка, которая содержит сообщение об ошибке. Начальное значение — null
};


function authReducer(state = initialState, action) { /** state - Текущее состояние приложения. По умолчанию равно initialState. ACTION -  Объект действия, который содержит информацию о том, какое действие нужно выполнить.*/
  switch (action.type) { /**action.type: Это строка, которая определяет тип действия. В данном случае у вас есть два типа действий: INCREMENT и DECREMENT. */
    case REGISTER_REQUEST:
      return { ...state, loading:true }; //Если тип действия равен REGISTER_REQUEST, редуктор возвращает новое состояние, где loading установлено в true. Это указывает на начало процесса регистрации.
    case REGISTER_SUCCESS:
      return { ...state, loading:true, user:action.payload }; //Если тип действия равен REGISTER_SUCCESS, редуктор возвращает новое состояние, где loading установлено в false, и user обновляется данными из action.payload. Это указывает на успешное завершение процесса регистрации.
    case REGISTER_FAILURE:
      return {...state, loading:false, error:action.payload}; //Если тип действия равен REGISTER_FAILURE, редуктор возвращает новое состояние, где loading установлено в false, и error обновляется сообщением об ошибке из action.payload. Это указывает на ошибку в процессе регистрации.
    default: 
      return state; /**Если тип действия не соответствует ни одному из определенных случаев, редуктор возвращает текущее состояние без изменений. */
  }
}

//Этот код определяет редуктор authReducer, который обрабатывает действия, связанные 
//с процессом регистрации пользователя. 
//Редуктор обновляет состояние приложения в зависимости от типа действия и данных, 
//содержащихся в payload. 
//Начальное состояние определяет начальные значения для свойств loading, user и error. 
//Редуктор использует оператор switch для обработки различных типов действий и возвращает 
//новое состояние в зависимости от типа действия.

export default authReducer;
/** Теперь, когда у вас есть файл reducers.js, вы можете импортировать его в store.js */

